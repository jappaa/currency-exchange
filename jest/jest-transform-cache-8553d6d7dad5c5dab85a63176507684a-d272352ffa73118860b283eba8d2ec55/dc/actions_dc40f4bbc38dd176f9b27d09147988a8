/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.resetController = exports.updateController = exports.resetSetting = exports.updateSetting = exports.resetErrorMessage = exports.updateRouterState = exports.navigate = exports.RESET_CONTROLLER = exports.UPDATE_CONTROLLER = exports.RESET_SETTING = exports.UPDATE_SETTING = exports.RESET_ERROR_MESSAGE = exports.UPDATE_ROUTER_STATE = exports.NAVIGATE = undefined;var cov_28f9f02cd6 = function () {var path = '/Users/nattatorn.dev/projects/currency-exchange/src/modules/app/actions.js',hash = '9b1fe3267af2905dd5670faceb62f83ce9064927',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/nattatorn.dev/projects/currency-exchange/src/modules/app/actions.js', statementMap: { '0': { start: { line: 3, column: 17 }, end: { line: 3, column: 27 } }, '1': { start: { line: 4, column: 28 }, end: { line: 4, column: 49 } }, '2': { start: { line: 5, column: 28 }, end: { line: 5, column: 49 } }, '3': { start: { line: 6, column: 23 }, end: { line: 6, column: 39 } }, '4': { start: { line: 7, column: 22 }, end: { line: 7, column: 37 } }, '5': { start: { line: 8, column: 26 }, end: { line: 8, column: 45 } }, '6': { start: { line: 9, column: 25 }, end: { line: 9, column: 43 } }, '7': { start: { line: 11, column: 17 }, end: { line: 11, column: 61 } }, '8': { start: { line: 11, column: 29 }, end: { line: 11, column: 61 } }, '9': { start: { line: 12, column: 26 }, end: { line: 12, column: 75 } }, '10': { start: { line: 12, column: 35 }, end: { line: 12, column: 75 } }, '11': { start: { line: 13, column: 26 }, end: { line: 13, column: 61 } }, '12': { start: { line: 13, column: 32 }, end: { line: 13, column: 61 } }, '13': { start: { line: 14, column: 22 }, end: { line: 14, column: 70 } }, '14': { start: { line: 14, column: 33 }, end: { line: 14, column: 70 } }, '15': { start: { line: 15, column: 21 }, end: { line: 15, column: 50 } }, '16': { start: { line: 15, column: 27 }, end: { line: 15, column: 50 } }, '17': { start: { line: 16, column: 25 }, end: { line: 17, column: 45 } }, '18': { start: { line: 17, column: 2 }, end: { line: 17, column: 45 } }, '19': { start: { line: 18, column: 24 }, end: { line: 18, column: 56 } }, '20': { start: { line: 18, column: 30 }, end: { line: 18, column: 56 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 11, column: 17 }, end: { line: 11, column: 18 } }, loc: { start: { line: 11, column: 29 }, end: { line: 11, column: 61 } } }, '1': { name: '(anonymous_1)', decl: { start: { line: 12, column: 26 }, end: { line: 12, column: 27 } }, loc: { start: { line: 12, column: 35 }, end: { line: 12, column: 75 } } }, '2': { name: '(anonymous_2)', decl: { start: { line: 13, column: 26 }, end: { line: 13, column: 27 } }, loc: { start: { line: 13, column: 32 }, end: { line: 13, column: 61 } } }, '3': { name: '(anonymous_3)', decl: { start: { line: 14, column: 22 }, end: { line: 14, column: 23 } }, loc: { start: { line: 14, column: 33 }, end: { line: 14, column: 70 } } }, '4': { name: '(anonymous_4)', decl: { start: { line: 15, column: 21 }, end: { line: 15, column: 22 } }, loc: { start: { line: 15, column: 27 }, end: { line: 15, column: 50 } } }, '5': { name: '(anonymous_5)', decl: { start: { line: 16, column: 25 }, end: { line: 16, column: 26 } }, loc: { start: { line: 17, column: 2 }, end: { line: 17, column: 45 } } }, '6': { name: '(anonymous_6)', decl: { start: { line: 18, column: 24 }, end: { line: 18, column: 25 } }, loc: { start: { line: 18, column: 30 }, end: { line: 18, column: 56 } } } }, branchMap: {}, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0 }, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var /* istanbul ignore next */_action = require('../../services/action');

var NAVIGATE = /* istanbul ignore next */(++cov_28f9f02cd6.s[0], 'NAVIGATE');
var UPDATE_ROUTER_STATE = /* istanbul ignore next */(++cov_28f9f02cd6.s[1], 'UPDATE_ROUTER_STATE');
var RESET_ERROR_MESSAGE = /* istanbul ignore next */(++cov_28f9f02cd6.s[2], 'RESET_ERROR_MESSAGE');
var UPDATE_SETTING = /* istanbul ignore next */(++cov_28f9f02cd6.s[3], 'UPDATE_SETTING');
var RESET_SETTING = /* istanbul ignore next */(++cov_28f9f02cd6.s[4], 'RESET_SETTING');
var UPDATE_CONTROLLER = /* istanbul ignore next */(++cov_28f9f02cd6.s[5], 'UPDATE_CONTROLLER');
var RESET_CONTROLLER = /* istanbul ignore next */(++cov_28f9f02cd6.s[6], 'RESET_CONTROLLER'); /* istanbul ignore next */++cov_28f9f02cd6.s[7];

var navigate = function navigate(pathname) {/* istanbul ignore next */++cov_28f9f02cd6.f[0];++cov_28f9f02cd6.s[8];return (/* istanbul ignore next */(0, _action.action)(NAVIGATE, { pathname: pathname }));}; /* istanbul ignore next */++cov_28f9f02cd6.s[9];
var updateRouterState = function updateRouterState(state) {/* istanbul ignore next */++cov_28f9f02cd6.f[1];++cov_28f9f02cd6.s[10];return (/* istanbul ignore next */(0, _action.action)(UPDATE_ROUTER_STATE, { state: state }));}; /* istanbul ignore next */++cov_28f9f02cd6.s[11];
var resetErrorMessage = function resetErrorMessage() {/* istanbul ignore next */++cov_28f9f02cd6.f[2];++cov_28f9f02cd6.s[12];return (/* istanbul ignore next */(0, _action.action)(RESET_ERROR_MESSAGE));}; /* istanbul ignore next */++cov_28f9f02cd6.s[13];
var updateSetting = function updateSetting(setting) {/* istanbul ignore next */++cov_28f9f02cd6.f[3];++cov_28f9f02cd6.s[14];return (/* istanbul ignore next */(0, _action.action)(UPDATE_SETTING, { setting: setting }));}; /* istanbul ignore next */++cov_28f9f02cd6.s[15];
var resetSetting = function resetSetting() {/* istanbul ignore next */++cov_28f9f02cd6.f[4];++cov_28f9f02cd6.s[16];return (/* istanbul ignore next */(0, _action.action)(RESET_SETTING));}; /* istanbul ignore next */++cov_28f9f02cd6.s[17];
var updateController = function updateController(controller)
{/* istanbul ignore next */++cov_28f9f02cd6.f[5];++cov_28f9f02cd6.s[18];return (/* istanbul ignore next */(0, _action.action)(UPDATE_CONTROLLER, { controller: controller }));}; /* istanbul ignore next */++cov_28f9f02cd6.s[19];
var resetController = function resetController() {/* istanbul ignore next */++cov_28f9f02cd6.f[6];++cov_28f9f02cd6.s[20];return (/* istanbul ignore next */(0, _action.action)(RESET_CONTROLLER));}; /* istanbul ignore next */exports.


NAVIGATE = NAVIGATE; /* istanbul ignore next */exports.
UPDATE_ROUTER_STATE = UPDATE_ROUTER_STATE; /* istanbul ignore next */exports.
RESET_ERROR_MESSAGE = RESET_ERROR_MESSAGE; /* istanbul ignore next */exports.
UPDATE_SETTING = UPDATE_SETTING; /* istanbul ignore next */exports.
RESET_SETTING = RESET_SETTING; /* istanbul ignore next */exports.
UPDATE_CONTROLLER = UPDATE_CONTROLLER; /* istanbul ignore next */exports.
RESET_CONTROLLER = RESET_CONTROLLER; /* istanbul ignore next */exports.
navigate = navigate; /* istanbul ignore next */exports.
updateRouterState = updateRouterState; /* istanbul ignore next */exports.
resetErrorMessage = resetErrorMessage; /* istanbul ignore next */exports.
updateSetting = updateSetting; /* istanbul ignore next */exports.
resetSetting = resetSetting; /* istanbul ignore next */exports.
updateController = updateController; /* istanbul ignore next */exports.
resetController = resetController;