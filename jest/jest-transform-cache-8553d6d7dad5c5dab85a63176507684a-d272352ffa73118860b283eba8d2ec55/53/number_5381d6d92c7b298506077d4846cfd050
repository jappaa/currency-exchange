/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.defZero = exports.isNumber = exports.mathRound = undefined;var cov_2qwttwnwpi = function () {var path = '/Users/nattatorn.dev/projects/currency-exchange/src/services/number.js',hash = '3d144d116794641ebcd4b5197f25ab872e836727',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/nattatorn.dev/projects/currency-exchange/src/services/number.js', statementMap: { '0': { start: { line: 8, column: 18 }, end: { line: 9, column: 59 } }, '1': { start: { line: 9, column: 2 }, end: { line: 9, column: 59 } }, '2': { start: { line: 15, column: 17 }, end: { line: 22, column: 9 } }, '3': { start: { line: 16, column: 2 }, end: { line: 22, column: 9 } }, '4': { start: { line: 28, column: 16 }, end: { line: 28, column: 75 } }, '5': { start: { line: 28, column: 26 }, end: { line: 28, column: 75 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 8, column: 18 }, end: { line: 8, column: 19 } }, loc: { start: { line: 9, column: 2 }, end: { line: 9, column: 59 } } }, '1': { name: '(anonymous_1)', decl: { start: { line: 15, column: 17 }, end: { line: 15, column: 18 } }, loc: { start: { line: 16, column: 2 }, end: { line: 22, column: 9 } } }, '2': { name: '(anonymous_2)', decl: { start: { line: 28, column: 16 }, end: { line: 28, column: 17 } }, loc: { start: { line: 28, column: 26 }, end: { line: 28, column: 75 } } } }, branchMap: { '0': { loc: { start: { line: 8, column: 28 }, end: { line: 8, column: 37 } }, type: 'default-arg', locations: [{ start: { line: 8, column: 36 }, end: { line: 8, column: 37 } }] }, '1': { loc: { start: { line: 16, column: 2 }, end: { line: 22, column: 9 } }, type: 'cond-expr', locations: [{ start: { line: 21, column: 6 }, end: { line: 21, column: 12 } }, { start: { line: 22, column: 6 }, end: { line: 22, column: 9 } }] }, '2': { loc: { start: { line: 16, column: 2 }, end: { line: 20, column: 37 } }, type: 'binary-expr', locations: [{ start: { line: 16, column: 2 }, end: { line: 16, column: 8 } }, { start: { line: 17, column: 4 }, end: { line: 17, column: 31 } }, { start: { line: 18, column: 4 }, end: { line: 18, column: 30 } }, { start: { line: 19, column: 4 }, end: { line: 19, column: 51 } }, { start: { line: 20, column: 4 }, end: { line: 20, column: 37 } }] }, '3': { loc: { start: { line: 28, column: 26 }, end: { line: 28, column: 75 } }, type: 'cond-expr', locations: [{ start: { line: 28, column: 65 }, end: { line: 28, column: 71 } }, { start: { line: 28, column: 74 }, end: { line: 28, column: 75 } }] }, '4': { loc: { start: { line: 28, column: 26 }, end: { line: 28, column: 62 } }, type: 'binary-expr', locations: [{ start: { line: 28, column: 26 }, end: { line: 28, column: 52 } }, { start: { line: 28, column: 56 }, end: { line: 28, column: 62 } }] } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0 }, f: { '0': 0, '1': 0, '2': 0 }, b: { '0': [0], '1': [0, 0], '2': [0, 0, 0, 0, 0], '3': [0, 0], '4': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var /* istanbul ignore next */_numbro = require('numbro'); /* istanbul ignore next */var _numbro2 = _interopRequireDefault(_numbro);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

/**
param  {[float]}    number       | 100000 |
param  {[number]}   digit        | 5 |
return {[float]}    number       | 100000.00000 | return new number with format
cov_2qwttwnwpi.s[0];
var mathRound = function mathRound(number)
{/* istanbul ignore next */var digit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (++cov_2qwttwnwpi.b[0][0], 2); /* istanbul ignore next */++cov_2qwttwnwpi.f[0];++cov_2qwttwnwpi.s[1];return (/* istanbul ignore next */(0, _numbro2.default)(number).format( /* istanbul ignore next */'0,0.' + '0'.repeat(digit)));};

/**
                                                                                                                                                                                                                                                                                                                                                     * @param  {[float]}    number       | 100000 |
                                                                                                                                                                                                                                                                                                                                                     * @return {[float]}    number       | 100000 or '-' | return number check param is type number
                                                                                                                                                                                                                                                                                                                                                     */ /* istanbul ignore next */++cov_2qwttwnwpi.s[2];
var isNumber = function isNumber(number)
{/* istanbul ignore next */++cov_2qwttwnwpi.f[1];++cov_2qwttwnwpi.s[3];return (/* istanbul ignore next */(++cov_2qwttwnwpi.b[2][0], number) && /* istanbul ignore next */(++cov_2qwttwnwpi.b[2][1],
      typeof +number === 'number') && /* istanbul ignore next */(++cov_2qwttwnwpi.b[2][2],
      typeof number !== 'string') && /* istanbul ignore next */(++cov_2qwttwnwpi.b[2][3],
      !isNaN(Number( /* istanbul ignore next */(0, _numbro2.default)().unformat(number)))) && /* istanbul ignore next */(++cov_2qwttwnwpi.b[2][4],
      /* istanbul ignore next */(0, _numbro2.default)().unformat(number) !== 0) ? /* istanbul ignore next */(++cov_2qwttwnwpi.b[1][0],
      number) : /* istanbul ignore next */(++cov_2qwttwnwpi.b[1][1],
      '-'));};

/**
                  * @param  {[float]}    number       | 100000 |
                  * @return {[float]}    number       | 10000 or 0 | return default 0 check param is type number
                  */ /* istanbul ignore next */++cov_2qwttwnwpi.s[4];
var defZero = function defZero(number) {/* istanbul ignore next */++cov_2qwttwnwpi.f[2];++cov_2qwttwnwpi.s[5];return (/* istanbul ignore next */(++cov_2qwttwnwpi.b[4][0], !isNaN(Number(number))) && /* istanbul ignore next */(++cov_2qwttwnwpi.b[4][1], number) ? /* istanbul ignore next */(++cov_2qwttwnwpi.b[3][0], number) : /* istanbul ignore next */(++cov_2qwttwnwpi.b[3][1], 0));}; /* istanbul ignore next */exports.

mathRound = mathRound; /* istanbul ignore next */exports.isNumber = isNumber; /* istanbul ignore next */exports.defZero = defZero;